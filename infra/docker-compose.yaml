services:
  api:
    build:
      context: ../backend
      dockerfile: ./Dockerfile
    command: sh -c " python manage.py makemigrations &&
            python manage.py migrate &&
            gunicorn backend.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ../backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ../backend/.env
    environment:
      - DOCKER=true
    depends_on:
      - db
    

  db:
    image: postgres:16-alpine
    env_file:
      - ../backend/.env
    ports:
      - "5433:5432"   # Keep for local dev; CI doesn't need host mapping
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER}\" -d \"$${POSTGRES_DB}\""]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

  frontend:
    build:
      context: ../frontend
      dockerfile: ./Dockerfile
      args:
        API_URL: http://localhost:8000/api
    ports:
      - "3000:80"
    depends_on:
      - api
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 10s

volumes:
  postgres_data:
